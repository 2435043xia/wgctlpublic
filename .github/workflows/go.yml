# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  repository_dispatch:
    types: [src-update]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        repository: 2435043xia/wgctl
        token: ${{ secrets.GH_PAT }}

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Test
      run: go test -v ./...

    - name: Build-Darwin-Arm64
      run: GOOS=darwin GOARCH=arm64 go build -ldflags "-X main.Version=${{ github.event.client_payload.version }}" -o dist/wgctl-darwin-arm64 .

    - name: Build-Windows-Amd64
      run: GOOS=windows GOARCH=amd64 go build -ldflags "-X main.Version=${{ github.event.client_payload.version }}" -o dist/wgctl-windows-amd64 .

    - name: Build-Linux-Amd64
      run: GOOS=linux GOARCH=amd64 go build -ldflags "-X main.Version=${{ github.event.client_payload.version }}" -o dist/wgctl-linux-amd64 .
      
    - name: Create Release
      id: create_release
      uses: ncipollo/release-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        name: ${{ github.event.client_payload.short_hash }}
        #commit: ${{ github.event.client_payload.sha }}
        tag: ${{ github.event.client_payload.short_hash }}
        artifacts: "dist/*"
